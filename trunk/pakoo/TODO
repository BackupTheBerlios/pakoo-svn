List of TODO items for the Pakoo package manager frontend.

Really Serious Bugs (TM):
- Killed when scrolling down packages that have not yet been loaded.
  Probably caused by heavy threading, although I don't know what could be wrong.
  Solution: Create a scheduler for package scanning which obsoletes using multiple PackageScanners.

Not so serious bugs:
- Fix search line when switching categories.

Visible enhancements:
- Version links in the info view should select version items.
- "Updatable" or "Packages in world" filter (how to do that with delayed loading?)
- Status bar enhancements (progressbar while loading the tree).

Code enhancements:
- create an AllInOneLoader:
  * front end for specific loading stuff like TreeScanner, PackageScanner and ProfileLoader
  * feature-based loading ("provide names for all packages", "provide description for package xyz")
  * makes it easier to abstract out loading activities
- a consistent interface for passing the Settings object
- renames:
  * PortageTreeView -> TreeView
  * PackageInfoView -> InfoView
  * consistent use of "Portage" prefixes
- use namespaces
- abstract out important classes and make a plugin-like interface
  (which would be the first step to the possibility of using multiple backends)

UI Design:
- Search folders in the tree view, together with the categories
  ("Refine Search" button instead of quick filter area)
- "Vertical tab" widget (as in KDevelop's documentation sidebar), don't know what it's called
- Other tab categories: "Actions" (like install, uninstall, revdep-rebuild, etc.)
- How to handle "late loading" package info (description, updatable) in the quick search?
- How to select packages for installing/deinstalling/etc?
- Install queue or instant "one emerge per thread" processing?

Feature set:
- merging
  * refresh (emerge sync)
  * install (emerge)
  * uninstall (emerge -C)
  * clean up (emerge depclean)
  * etc-update
  * revdep-rebuild
- searching
- configuring
